type: edu
files:
  - name: easyrider/easyrider.py
    visible: true
    text: |
      import json
      
      # Write your code here
      user_input = input()
      
      json_input = json.loads(user_input)
      
      errors = {"bus_id": 0, "stop_id": 0, "stop_name": 0, "next_stop": 0,
                "stop_type": 0, "a_time": 0}
      
      for bus in json_input:
          bus_id = bus["bus_id"]
          stop_id = bus["stop_id"]
          stop_name = bus["stop_name"]
          next_stop = bus["next_stop"]
          stop_type = bus["stop_type"]
          a_time = bus["a_time"]
      
          if not isinstance(bus_id, int):
              errors["bus_id"] += 1
          if not isinstance(stop_id, int):
              errors["stop_id"] += 1
          if stop_name and isinstance(stop_name, str):
              words = stop_name.split()
              if words[-1] not in ["Road", "Avenue", "Boulevard", "Street", "Str.", "Av.", "St.", "avenue", "street", "boulevard", "road", "Boullevard", "Elm"]:
                  errors["stop_name"] += 1
          else:
              errors["stop_name"] += 1
      
          if not isinstance(next_stop, int):
              errors["next_stop"] += 1
          if stop_type not in ["S", "O", "F"]:
              if stop_type:
                  errors["stop_type"] += 1
          try:
              if a_time:
                  if not 0 <= int(a_time.split(":")[0]) < 24:
                      errors["a_time"] += 1
                  if not 0 <= int(a_time.split(":")[1]) < 60:
                      errors["a_time"] += 1
              else:
                  errors["a_time"] += 1
          except AttributeError:
              errors["a_time"] += 1
      
      print(f"""Type and required field validation: {sum(errors.values())} errors
      bus_id: {errors["bus_id"]}
      stop_id: {errors["stop_id"]}
      stop_name: {errors["stop_name"]}
      next_stop: {errors["next_stop"]}
      stop_type: {errors["stop_type"]}
      a_time: {errors["a_time"]}
      """)
    learner_created: false
  - name: test/__init__.py
    visible: false
    learner_created: false
  - name: test/tests.py
    visible: false
    text: |
      from hstest.stage_test import *
      from hstest.test_case import TestCase
      import re
      
      
      class EasyRiderStage3(StageTest):
          def generate(self) -> List[TestCase]:
              return [
                  TestCase(
                      stdin='[{"bus_id" : 128, "stop_id" : 1, "stop_name" : "Prospekt Avenue", "next_stop" : 3, "stop_type" : "S", "a_time" : "08:12"}, '
                            '{"bus_id" : 128, "stop_id" : 3, "stop_name" : "Elm Street", "next_stop" : 5, "stop_type" : "", "a_time" : "08:19"}, '
                            '{"bus_id" : 128, "stop_id" : 5, "stop_name" : "Fifth Avenue", "next_stop" : 7, "stop_type" : "O", "a_time" : "08:25"}, '
                            '{"bus_id" : 128, "stop_id" : 7, "stop_name" : "Sesame Street", "next_stop" : 0, "stop_type" : "F", "a_time" : "08:37"}, '
                            '{"bus_id" : 256, "stop_id" : 2, "stop_name" : "Pilotow Street", "next_stop" : 3, "stop_type" : "S", "a_time" : "09:20"}, '
                            '{"bus_id" : 256, "stop_id" : 3, "stop_name" : "Elm Street", "next_stop" : 6, "stop_type" : "", "a_time" : "09:45"}, '
                            '{"bus_id" : 256, "stop_id" : 6, "stop_name" : "Sunset Boulevard", "next_stop" : 7, "stop_type" : "", "a_time" : "09:59"}, '
                            '{"bus_id" : 256, "stop_id" : 7, "stop_name" : "Sesame Street", "next_stop" : 0, "stop_type" : "F", "a_time" : "10:12"}, '
                            '{"bus_id" : 512, "stop_id" : 4, "stop_name" : "Bourbon Street", "next_stop" : 6, "stop_type" : "S", "a_time" : "08:13"}, '
                            '{"bus_id" : 512, "stop_id" : 6, "stop_name" : "Sunset Boulevard", "next_stop" : 0, "stop_type" : "F", "a_time" : "08:16"}]',
                      attach=((128, 256, 512), (4, 4, 2), 3)),
                  TestCase(
                      stdin='[{"bus_id" : 128, "stop_id" : 1, "stop_name" : "Fifth Avenue", "next_stop" : 4, "stop_type" : "S", "a_time" : "08:12"}, '
                            '{"bus_id" : 128, "stop_id" : 4, "stop_name" : "Abbey Road", "next_stop" : 5, "stop_type" : "", "a_time" : "08:19"},  '
                            '{"bus_id" : 128, "stop_id" : 5, "stop_name" : "Santa Monica Boulevard", "next_stop" : 8, "stop_type" : "O", "a_time" : "08:25"},  '
                            '{"bus_id" : 128, "stop_id" : 8, "stop_name" : "Elm Street", "next_stop" : 11, "stop_type" : "", "a_time" : "08:37"},  '
                            '{"bus_id" : 128, "stop_id" : 11, "stop_name" : "Beale Street", "next_stop" : 12, "stop_type" : "", "a_time" : "09:20"},  '
                            '{"bus_id" : 128, "stop_id" : 12, "stop_name" : "Sesame Street", "next_stop" : 14, "stop_type" : "", "a_time" : "09:45"},  '
                            '{"bus_id" : 128, "stop_id" : 14, "stop_name" : "Bourbon Street", "next_stop" : 19, "stop_type" : "O", "a_time" : "09:59"},  '
                            '{"bus_id" : 128, "stop_id" : 19, "stop_name" : "Prospekt Avenue", "next_stop" : 0, "stop_type" : "F", "a_time" : "10:12"},  '
                            '{"bus_id" : 256, "stop_id" : 2, "stop_name" : "Pilotow Street", "next_stop" : 3, "stop_type" : "S", "a_time" : "08:13"},  '
                            '{"bus_id" : 256, "stop_id" : 3, "stop_name" : "Startowa Street", "next_stop" : 8, "stop_type" : "", "a_time" : "08:16"},  '
                            '{"bus_id" : 256, "stop_id" : 8, "stop_name" : "Elm Street", "next_stop" : 10, "stop_type" : "", "a_time" : "08:29"},  '
                            '{"bus_id" : 256, "stop_id" : 10, "stop_name" : "Lombard Street", "next_stop" : 12, "stop_type" : "", "a_time" : "08:44"},  '
                            '{"bus_id" : 256, "stop_id" : 12, "stop_name" : "Sesame Street", "next_stop" : 13, "stop_type" : "O", "a_time" : "08:46"},  '
                            '{"bus_id" : 256, "stop_id" : 13, "stop_name" : "Orchard Road", "next_stop" : 16, "stop_type" : "", "a_time" : "09:13"}, '
                            '{"bus_id" : 256, "stop_id" : 16, "stop_name" : "Sunset Boulevard", "next_stop" : 17, "stop_type" : "O", "a_time" : "09:26"},  '
                            '{"bus_id" : 256, "stop_id" : 17, "stop_name" : "Khao San Road", "next_stop" : 20, "stop_type" : "O", "a_time" : "10:25"},  '
                            '{"bus_id" : 256, "stop_id" : 20, "stop_name" : "Michigan Avenue", "next_stop" : 0, "stop_type" : "F", "a_time" : "11:26"},  '
                            '{"bus_id" : 512, "stop_id" : 6, "stop_name" : "Arlington Road", "next_stop" : 7, "stop_type" : "S", "a_time" : "11:06"},  '
                            '{"bus_id" : 512, "stop_id" : 7, "stop_name" : "Parizska Street", "next_stop" : 8, "stop_type" : "", "a_time" : "11:15"},  '
                            '{"bus_id" : 512, "stop_id" : 8, "stop_name" : "Elm Street", "next_stop" : 9, "stop_type" : "", "a_time" : "11:56"},  '
                            '{"bus_id" : 512, "stop_id" : 9, "stop_name" : "Niebajka Avenue", "next_stop" : 15, "stop_type" : "", "a_time" : "12:20"},  '
                            '{"bus_id" : 512, "stop_id" : 15, "stop_name" : "Jakis Street", "next_stop" : 16, "stop_type" : "", "a_time" : "12:44"},  '
                            '{"bus_id" : 512, "stop_id" : 16, "stop_name" : "Sunset Boulevard", "next_stop" : 18, "stop_type" : "", "a_time" : "13:01"},  '
                            '{"bus_id" : 512, "stop_id" : 18, "stop_name" : "Jakas Avenue", "next_stop" : 19, "stop_type" : "", "a_time" : "14:00"},  '
                            '{"bus_id" : 1024, "stop_id" : 21, "stop_name" : "Karlikowska Avenue", "next_stop" : 12, "stop_type" : "S", "a_time" : "13:01"},  '
                            '{"bus_id" : 1024, "stop_id" : 12, "stop_name" : "Sesame Street", "next_stop" : 0, "stop_type" : "F", "a_time" : "14:00"},  '
                            '{"bus_id" : 512, "stop_id" : 19, "stop_name" : "Prospekt Avenue", "next_stop" : 0, "stop_type" : "F", "a_time" : "14:11"}]',
                      attach=((128, 256, 512, 1024), (8, 9, 8, 2), 4)),
              ]
      
          def check(self, reply: str, result) -> CheckResult:
              for x in range(result[2]):
                  query = str(result[0][x]) + "[\\D]*" + str(result[1][x])
                  if not re.search(rf'{query}', reply.strip()):
                      if result[2] == 3:
                          return CheckResult.wrong("Wrong number of stops detected. Expected output:\n\n"
                                                   "Line names and number of stops:\n"
                                                   f"bus_id: {result[0][0]}, stops: {result[1][0]}\n"
                                                   f"bus_id: {result[0][1]}, stops: {result[1][1]}\n"
                                                   f"bus_id: {result[0][2]}, stops: {result[1][2]}")
                      else:
                          return CheckResult.wrong("Wrong number of stops detected. Expected output:\n\n"
                                                   "Line names and number of stops:\n"
                                                   f"bus_id: {result[0][0]}, stops: {result[1][0]}\n"
                                                   f"bus_id: {result[0][1]}, stops: {result[1][1]}\n"
                                                   f"bus_id: {result[0][2]}, stops: {result[1][2]}\n"
                                                   f"bus_id: {result[0][3]}, stops: {result[1][3]}")
              return CheckResult.correct()
      
      
      if __name__ == '__main__':
          EasyRiderStage3('easyrider.easyrider').run_tests()
    learner_created: false
  - name: tests.py
    visible: false
    text: |-
      from test.tests import EasyRiderStage3
      
      if __name__ == '__main__':    EasyRiderStage3('easyrider.easyrider').run_tests()
    learner_created: false
feedback_link: https://hyperskill.org/projects/128/stages/682/implement#comment
status: Unchecked
record: -1
